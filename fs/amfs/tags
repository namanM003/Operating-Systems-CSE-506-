!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
AMFS_D	amfs.h	99;"	d
AMFS_F	amfs.h	105;"	d
AMFS_I	amfs.h	/^static inline struct amfs_inode_info *AMFS_I(const struct inode *inode)$/;"	f
AMFS_NAME	amfs.h	31;"	d
AMFS_NAME	main.c	/^MODULE_ALIAS_FS(AMFS_NAME);$/;"	v
AMFS_ROOT_INO	amfs.h	34;"	d
AMFS_SB	amfs.h	102;"	d
AMFS_VERSION	Makefile	/^AMFS_VERSION="0.1"$/;"	m
UDBG	amfs.h	37;"	d
_AMFS_H_	amfs.h	13;"	d
__amfs_lookup	lookup.c	/^static struct dentry *__amfs_lookup(struct dentry *dentry,$/;"	f	file:
__this_module	amfs.mod.c	/^__visible struct module __this_module$/;"	v	typeref:struct:module
__used	amfs.mod.c	/^__used$/;"	v	file:
amfs-y	Makefile	/^amfs-y := dentry.o file.o inode.o main.o super.o lookup.o mmap.o$/;"	m
amfs_aio_read	file.c	/^static ssize_t amfs_aio_read(struct kiocb *iocb, const struct iovec *iov,$/;"	f	file:
amfs_aio_write	file.c	/^static ssize_t amfs_aio_write(struct kiocb *iocb, const struct iovec *iov,$/;"	f	file:
amfs_alloc_inode	super.c	/^static struct inode *amfs_alloc_inode(struct super_block *sb)$/;"	f	file:
amfs_aops	mmap.c	/^const struct address_space_operations amfs_aops = {$/;"	v	typeref:struct:address_space_operations
amfs_compat_ioctl	file.c	/^static long amfs_compat_ioctl(struct file *file, unsigned int cmd,$/;"	f	file:
amfs_create	inode.c	/^static int amfs_create(struct inode *dir, struct dentry *dentry,$/;"	f	file:
amfs_d_release	dentry.c	/^static void amfs_d_release(struct dentry *dentry)$/;"	f	file:
amfs_d_revalidate	dentry.c	/^static int amfs_d_revalidate(struct dentry *dentry, unsigned int flags)$/;"	f	file:
amfs_dentry_cachep	lookup.c	/^static struct kmem_cache *amfs_dentry_cachep;$/;"	v	typeref:struct:kmem_cache	file:
amfs_dentry_info	amfs.h	/^struct amfs_dentry_info {$/;"	s
amfs_destroy_dentry_cache	lookup.c	/^void amfs_destroy_dentry_cache(void)$/;"	f
amfs_destroy_inode	super.c	/^static void amfs_destroy_inode(struct inode *inode)$/;"	f	file:
amfs_destroy_inode_cache	super.c	/^void amfs_destroy_inode_cache(void)$/;"	f
amfs_dir_fops	file.c	/^const struct file_operations amfs_dir_fops = {$/;"	v	typeref:struct:file_operations
amfs_dir_iops	inode.c	/^const struct inode_operations amfs_dir_iops = {$/;"	v	typeref:struct:inode_operations
amfs_direct_IO	mmap.c	/^static ssize_t amfs_direct_IO(int rw, struct kiocb *iocb,$/;"	f	file:
amfs_dops	dentry.c	/^const struct dentry_operations amfs_dops = {$/;"	v	typeref:struct:dentry_operations
amfs_evict_inode	super.c	/^static void amfs_evict_inode(struct inode *inode)$/;"	f	file:
amfs_fasync	file.c	/^static int amfs_fasync(int fd, struct file *file, int flag)$/;"	f	file:
amfs_fault	mmap.c	/^static int amfs_fault(struct vm_area_struct *vma, struct vm_fault *vmf)$/;"	f	file:
amfs_file_info	amfs.h	/^struct amfs_file_info {$/;"	s
amfs_file_llseek	file.c	/^static loff_t amfs_file_llseek(struct file *file, loff_t offset, int whence)$/;"	f	file:
amfs_file_release	file.c	/^static int amfs_file_release(struct inode *inode, struct file *file)$/;"	f	file:
amfs_flush	file.c	/^static int amfs_flush(struct file *file, fl_owner_t id)$/;"	f	file:
amfs_follow_link	inode.c	/^static void *amfs_follow_link(struct dentry *dentry, struct nameidata *nd)$/;"	f	file:
amfs_fs_type	main.c	/^static struct file_system_type amfs_fs_type = {$/;"	v	typeref:struct:file_system_type	file:
amfs_fsync	file.c	/^static int amfs_fsync(struct file *file, loff_t start, loff_t end,$/;"	f	file:
amfs_get_lower_path	amfs.h	/^static inline void amfs_get_lower_path(const struct dentry *dent,$/;"	f
amfs_getattr	inode.c	/^static int amfs_getattr(struct vfsmount *mnt, struct dentry *dentry,$/;"	f	file:
amfs_getxattr	inode.c	/^amfs_getxattr(struct dentry *dentry, const char *name, void *buffer,$/;"	f	file:
amfs_iget	lookup.c	/^struct inode *amfs_iget(struct super_block *sb, struct inode *lower_inode)$/;"	f
amfs_init_dentry_cache	lookup.c	/^int amfs_init_dentry_cache(void)$/;"	f
amfs_init_inode_cache	super.c	/^int amfs_init_inode_cache(void)$/;"	f
amfs_inode_cachep	super.c	/^static struct kmem_cache *amfs_inode_cachep;$/;"	v	typeref:struct:kmem_cache	file:
amfs_inode_info	amfs.h	/^struct amfs_inode_info {$/;"	s
amfs_inode_set	lookup.c	/^static int amfs_inode_set(struct inode *inode, void *lower_inode)$/;"	f	file:
amfs_inode_test	lookup.c	/^static int amfs_inode_test(struct inode *inode, void *candidate_lower_inode)$/;"	f	file:
amfs_interpose	lookup.c	/^int amfs_interpose(struct dentry *dentry, struct super_block *sb,$/;"	f
amfs_link	inode.c	/^static int amfs_link(struct dentry *old_dentry, struct inode *dir,$/;"	f	file:
amfs_listxattr	inode.c	/^amfs_listxattr(struct dentry *dentry, char *buffer, size_t buffer_size)$/;"	f	file:
amfs_lookup	lookup.c	/^struct dentry *amfs_lookup(struct inode *dir, struct dentry *dentry,$/;"	f
amfs_lower_file	amfs.h	/^static inline struct file *amfs_lower_file(const struct file *f)$/;"	f
amfs_lower_inode	amfs.h	/^static inline struct inode *amfs_lower_inode(const struct inode *i)$/;"	f
amfs_lower_super	amfs.h	/^static inline struct super_block *amfs_lower_super($/;"	f
amfs_main_fops	file.c	/^const struct file_operations amfs_main_fops = {$/;"	v	typeref:struct:file_operations
amfs_main_iops	inode.c	/^const struct inode_operations amfs_main_iops = {$/;"	v	typeref:struct:inode_operations
amfs_mkdir	inode.c	/^static int amfs_mkdir(struct inode *dir, struct dentry *dentry, umode_t mode)$/;"	f	file:
amfs_mknod	inode.c	/^static int amfs_mknod(struct inode *dir, struct dentry *dentry, umode_t mode,$/;"	f	file:
amfs_mmap	file.c	/^static int amfs_mmap(struct file *file, struct vm_area_struct *vma)$/;"	f	file:
amfs_mount	main.c	/^struct dentry *amfs_mount(struct file_system_type *fs_type, int flags,$/;"	f
amfs_open	file.c	/^static int amfs_open(struct inode *inode, struct file *file)$/;"	f	file:
amfs_page_mkwrite	mmap.c	/^static int amfs_page_mkwrite(struct vm_area_struct *vma,$/;"	f	file:
amfs_permission	inode.c	/^static int amfs_permission(struct inode *inode, int mask)$/;"	f	file:
amfs_put_lower_path	amfs.h	/^static inline void amfs_put_lower_path(const struct dentry *dent,$/;"	f
amfs_put_reset_lower_path	amfs.h	/^static inline void amfs_put_reset_lower_path(const struct dentry *dent)$/;"	f
amfs_put_super	super.c	/^static void amfs_put_super(struct super_block *sb)$/;"	f	file:
amfs_read	file.c	/^static ssize_t amfs_read(struct file *file, char __user *buf,$/;"	f	file:
amfs_read_iter	file.c	/^amfs_read_iter(struct kiocb *iocb, struct iov_iter *iter)$/;"	f
amfs_read_super	main.c	/^static int amfs_read_super(struct super_block *sb, void *raw_data, int silent)$/;"	f	file:
amfs_readdir	file.c	/^static int amfs_readdir(struct file *file, struct dir_context *ctx)$/;"	f	file:
amfs_readlink	inode.c	/^static int amfs_readlink(struct dentry *dentry, char __user *buf, int bufsiz)$/;"	f	file:
amfs_remount_fs	super.c	/^static int amfs_remount_fs(struct super_block *sb, int *flags, char *options)$/;"	f	file:
amfs_removexattr	inode.c	/^amfs_removexattr(struct dentry *dentry, const char *name)$/;"	f	file:
amfs_rename	inode.c	/^static int amfs_rename(struct inode *old_dir, struct dentry *old_dentry,$/;"	f	file:
amfs_reset_lower_path	amfs.h	/^static inline void amfs_reset_lower_path(const struct dentry *dent)$/;"	f
amfs_rmdir	inode.c	/^static int amfs_rmdir(struct inode *dir, struct dentry *dentry)$/;"	f	file:
amfs_sb_info	amfs.h	/^struct amfs_sb_info {$/;"	s
amfs_set_lower_file	amfs.h	/^static inline void amfs_set_lower_file(struct file *f, struct file *val)$/;"	f
amfs_set_lower_inode	amfs.h	/^static inline void amfs_set_lower_inode(struct inode *i, struct inode *val)$/;"	f
amfs_set_lower_path	amfs.h	/^static inline void amfs_set_lower_path(const struct dentry *dent,$/;"	f
amfs_set_lower_super	amfs.h	/^static inline void amfs_set_lower_super(struct super_block *sb,$/;"	f
amfs_setattr	inode.c	/^static int amfs_setattr(struct dentry *dentry, struct iattr *ia)$/;"	f	file:
amfs_setxattr	inode.c	/^amfs_setxattr(struct dentry *dentry, const char *name, const void *value,$/;"	f	file:
amfs_sops	super.c	/^const struct super_operations amfs_sops = {$/;"	v	typeref:struct:super_operations
amfs_statfs	super.c	/^static int amfs_statfs(struct dentry *dentry, struct kstatfs *buf)$/;"	f	file:
amfs_symlink	inode.c	/^static int amfs_symlink(struct inode *dir, struct dentry *dentry,$/;"	f	file:
amfs_symlink_iops	inode.c	/^const struct inode_operations amfs_symlink_iops = {$/;"	v	typeref:struct:inode_operations
amfs_umount_begin	super.c	/^static void amfs_umount_begin(struct super_block *sb)$/;"	f	file:
amfs_unlink	inode.c	/^static int amfs_unlink(struct inode *dir, struct dentry *dentry)$/;"	f	file:
amfs_unlocked_ioctl	file.c	/^static long amfs_unlocked_ioctl(struct file *file, unsigned int cmd,$/;"	f	file:
amfs_vm_ops	mmap.c	/^const struct vm_operations_struct amfs_vm_ops = {$/;"	v	typeref:struct:vm_operations_struct
amfs_write	file.c	/^static ssize_t amfs_write(struct file *file, const char __user *buf,$/;"	f	file:
amfs_write_iter	file.c	/^amfs_write_iter(struct kiocb *iocb, struct iov_iter *iter)$/;"	f
exit_amfs_fs	main.c	/^module_exit(exit_amfs_fs);$/;"	v
exit_amfs_fs	main.c	/^static void __exit exit_amfs_fs(void)$/;"	f	file:
free_dentry_private_data	lookup.c	/^void free_dentry_private_data(struct dentry *dentry)$/;"	f
init_amfs_fs	main.c	/^module_init(init_amfs_fs);$/;"	v
init_amfs_fs	main.c	/^static int __init init_amfs_fs(void)$/;"	f	file:
init_once	super.c	/^static void init_once(void *obj)$/;"	f	file:
lock	amfs.h	/^	spinlock_t lock;	\/* protects lower_path *\/$/;"	m	struct:amfs_dentry_info
lock_parent	amfs.h	/^static inline struct dentry *lock_parent(struct dentry *dentry)$/;"	f
lower_file	amfs.h	/^	struct file *lower_file;$/;"	m	struct:amfs_file_info	typeref:struct:amfs_file_info::file
lower_inode	amfs.h	/^	struct inode *lower_inode;$/;"	m	struct:amfs_inode_info	typeref:struct:amfs_inode_info::inode
lower_path	amfs.h	/^	struct path lower_path;$/;"	m	struct:amfs_dentry_info	typeref:struct:amfs_dentry_info::path
lower_sb	amfs.h	/^	struct super_block *lower_sb;$/;"	m	struct:amfs_sb_info	typeref:struct:amfs_sb_info::super_block
lower_vm_ops	amfs.h	/^	const struct vm_operations_struct *lower_vm_ops;$/;"	m	struct:amfs_file_info	typeref:struct:amfs_file_info::vm_operations_struct
new_dentry_private_data	lookup.c	/^int new_dentry_private_data(struct dentry *dentry)$/;"	f
pathcpy	amfs.h	/^static inline void pathcpy(struct path *dst, const struct path *src)$/;"	f
unlock_dir	amfs.h	/^static inline void unlock_dir(struct dentry *dir)$/;"	f
vfs_inode	amfs.h	/^	struct inode vfs_inode;$/;"	m	struct:amfs_inode_info	typeref:struct:amfs_inode_info::inode
